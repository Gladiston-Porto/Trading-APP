# Nginx virtual host configuration for Frontend App
# Handles routing, caching, and SPA configuration

# Redirect HTTP to HTTPS (if needed in production)
# Uncomment when HTTPS is configured
# server {
#     listen 80;
#     server_name _;
#     return 301 https://$host$request_uri;
# }

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # Root directory
    root /usr/share/nginx/html;
    index index.html;

    # Client body timeout
    client_body_timeout 10s;
    client_header_timeout 10s;
    client_max_body_size 20M;

    # ===== Caching Strategy =====

    # Cache static assets (images, fonts, etc) for 1 year
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 365d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Cache vendor bundles for 1 year (immutable)
    location ~* /assets/vendor-.+\.js$ {
        expires 365d;
        add_header Cache-Control "public, immutable, max-age=31536000";
        access_log off;
    }

    # Cache chunks for 30 days
    location ~* /assets/chunk-.+\.js$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Cache CSS for 30 days
    location ~* /assets/.+\.css$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # ===== SPA Configuration =====

    # All other requests go to index.html (for client-side routing)
    location / {
        try_files $uri $uri/ /index.html;
        expires -1;
        add_header Cache-Control "public, max-age=0, must-revalidate";
        add_header ETag "\"$http_x_unique_id\"";
    }

    # Specific files - always check for new version
    location = /index.html {
        expires -1;
        add_header Cache-Control "public, max-age=0, must-revalidate";
    }

    # ===== Security =====

    # Deny access to hidden files and directories
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to config files
    location ~ \.(conf|config|env|json|yaml|yml|sql)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # ===== Health Check =====

    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # ===== API Proxy (if needed) =====

    # Uncomment to proxy API requests to backend
    # location /api/ {
    #     proxy_pass http://backend:3333;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_cache_bypass $http_upgrade;
    #     proxy_buffering off;
    #     proxy_request_buffering off;
    # }

    # ===== WebSocket Proxy (if needed) =====

    # location /socket.io {
    #     proxy_pass http://backend:3333/socket.io;
    #     proxy_http_version 1.1;
    #     proxy_buffering off;
    #     proxy_request_buffering off;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }

    # ===== Error Pages =====

    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;

    # Logging
    access_log /var/log/nginx/access.log main buffer=32k;
    error_log /var/log/nginx/error.log warn;
}
